{"version":3,"sources":["logo.svg","Components/ErrorBox.js","Components/Home.js","Components/firebaseConfig.js","Components/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ErrorBox","className","id","this","props","error","React","Component","Home","checkLoggedIn","localStorage","getItem","console","log","window","location","href","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","state","cellNo","pin","userPin","document","getElementsByClassName","style","height","innerHeight","setTimeout","classList","toggle","setInterval","altColour","user","length","sendSMS","setState","callError","animateNo","getElementById","colours","rand","parseInt","Math","random","backgroundColor","transition","oc_email","password","auth","createUserWithEmailAndPassword","then","result","currentUser","setItem","JSON","stringify","errorBox","input","marginLeft","value","floor","sms","replace","xhr","XMLHttpRequest","open","cors","setRequestHeader","onreadystatechange","readyState","type","onChange","text","target","max-length","placeholder","onClick","verifyPIN","verifyCellNo","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ebbc063d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nexport default class ErrorBox extends React.Component{\n    render(){\n        return(\n            <div className=\"errorBox\">\n                <center>\n                <p id=\"errorText\">{this.props.error}</p>\n                </center>\n            </div>\n        );\n    }\n    \n}","import React from 'react';\nimport ErrorBox from './ErrorBox';\n\nexport default class Home extends React.Component{\n    componentDidMount(){\n        this.checkLoggedIn();\n    }\n\n    checkLoggedIn(){\n        var user = localStorage.getItem('oc_user');\n        if(user){\n            console.log(\"Logged in...\");\n        }else{\n            window.location.href = \"/\";\n        }\n    }\n\n\n    render(){\n        return(\n            <div className=\"appContainer\">\n            <ErrorBox/>\n\n            <h2>Home</h2>\n            </div>\n        );\n    }\n\n}","import * as firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8pLz0it3fsyGDM897C-5d447BsbQQyWA\",\n    authDomain: \"my-awesome-project-ebf03.firebaseapp.com\",\n    databaseURL: \"https://my-awesome-project-ebf03.firebaseio.com\",\n    projectId: \"my-awesome-project-ebf03\",\n    storageBucket: \"my-awesome-project-ebf03.appspot.com\",\n    messagingSenderId: \"1097690692681\",\n    appId: \"1:1097690692681:web:c4fa8df4549fe75f38d398\"\n  };\n  firebase.initializeApp(firebaseConfig);\n  export default firebase;","import React from 'react';\nimport firebase from './firebaseConfig';\nimport ErrorBox from './ErrorBox';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\n\n\nexport default class Login extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            cellNo: '',\n            pin: '',\n            userPin: '',\n            error: ''\n        }\n    }\n\n\n    componentDidMount(){\n        this.checkLoggedIn();\n        document.getElementsByClassName(\"signedOutContainer\")[0].style.height = window.innerHeight + 'px';\n        setTimeout(()=>{document.getElementsByClassName(\"signedOutContainer\")[0].classList.toggle(\"signedOutContainerShowing\")},1400);\n        this.checkLoggedIn();\n        setInterval(()=>{this.altColour()}, 4000);\n    }\n\n\n    checkLoggedIn(){\n        var user = localStorage.getItem('oc_user');\n        console.log(user);\n        if(user){\n            window.location.href = \"/home\";\n        }\n    }\n\n    verifyCellNo(){\n        var cell = this.state.cellNo;\n        if(cell.length == 10){\n        document.getElementsByClassName(\"confirmPIN\")[0].classList.toggle(\"confirmPINShowing\");\n        this.sendSMS();\n        }else{\n            this.setState({error: \"Invalid phone number entered\"});\n            this.callError();\n            this.animateNo(document.getElementsByClassName(\"registrationPanel\")[0], document.getElementById(\"cellphone\"));\n        }\n    }\n\n    altColour(){\n        var colours = [\"#FFDAC1\",\"#C7CEEA\",\"#E2F0CB\",\"#B5EAD7\",\"#FF9AA2\",\"#AFC7D0\"];\n        var rand = parseInt(Math.random()*(colours.length - 1));\n        console.log(rand,colours[rand]);\n        document.getElementsByClassName(\"signedOutContainerShowing\")[0].style.backgroundColor = colours[rand];\n        document.getElementsByClassName(\"signedOutContainerShowing\")[0].style.transition = '4s';\n    }\n\n    verifyPIN(){\n        if(this.state.pin == this.state.userPin){\n            \n            var oc_email = this.state.cellNo + '_oc'+this.state.pin+'@onecab.co.za';\n            console.log(oc_email);\n            var password = this.state.pin + '_oc';\n            firebase.auth().createUserWithEmailAndPassword(oc_email, password).then(result => {\n                    var user = firebase.auth().currentUser;\n                    console.log(user);\n                    localStorage.setItem('oc_user', JSON.stringify(user));\n                    window.location.href = \"/home\";\n            });\n        }else{\n            //show error\n            this.setState({error: \"Invalid PIN entered\"});\n            this.callError();\n            var pin = document.getElementsByClassName(\"confirmPINShowing\")[0];\n            this.animateNo(pin, document.getElementById(\"cellphone1\"));\n        }\n    }\n\n    callError(){\n        var errorBox = document.getElementsByClassName(\"errorBox\")[0];\n        errorBox.classList.toggle(\"errorShowing\");\n        setTimeout(()=>{errorBox.classList.toggle(\"errorShowing\")}, 2500);\n    }\n\n    animateNo(pin, input){\n        pin.style.marginLeft = \"-4%\";\n            setTimeout(()=>{pin.style.marginLeft = \"4%\"; pin.style.transition = \".25s\"}, 250);\n            setTimeout(()=>{pin.style.marginLeft = \"-3%\"; pin.style.transition = \".25s\"}, 500);\n            setTimeout(()=>{pin.style.marginLeft= \"2%\"; pin.style.transition = \".25s\"; input.value = \"\"}, 650);\n            setTimeout(()=>{pin.style.marginLeft = \"1%\"; pin.style.transition = \".25s\"}, 900);\n            setTimeout(()=>{pin.style.marginLeft = \"0%\"; pin.style.transition = \".70s\"}, 901);\n    }\n\n    sendSMS(){\n        var pin = Math.floor(Math.random()*100000);\n        this.setState({pin: pin});\n        console.log(pin);\n        var number = this.state.cellNo.replace('0','27');\n        var body = `Your Onecab verification is ${pin}`;\n        var cors = 'https://cors-anywhere.herokuapp.com';\n        var sms = 'https://api.bulksms.com/v1/messages/send?to='+number+'&body='+body;\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', cors+'/'+sms, true);\n        xhr.setRequestHeader('path', 'api.bulksms.com/v1/messages/send?');\n        xhr.setRequestHeader('Authority', 'api.bulksms.com');\n        xhr.setRequestHeader('scheme','https');\n        xhr.setRequestHeader('origin', 'https://onecab.co.za');\n        xhr.setRequestHeader('Access-Control-Allow-Origin', 'https://onecab.co.za');\n        xhr.setRequestHeader('Authorization', 'Basic emlwaTpaaXBpMTIzNDU2');\n        xhr.onreadystatechange = () => {\n        if(xhr.readyState == '4'){\n          console.log(\"Success\");\n          }else{\n          console.log(\"Unable to send...\");\n          }\n          }\n        //xhr.send();\n        }\n\n\n    render(){\n        return(\n            <div className=\"signedOutContainer\">\n                <ErrorBox error={this.state.error}/>\n                <div className=\"confirmPIN\">\n                <br/>\n                <h2 id=\"welcome-text\">Verification</h2><br/>\n                    <p id=\"welcome-small-text\">We've sent a verification PIN to {this.state.cellNo}. Please enter the PIN below:</p><br/>\n                    <input type=\"number\" onChange={(text)=>{this.setState({userPin: text.target.value})}} style={{marginLeft: 20}} id=\"cellphone1\" max-length=\"10\" placeholder=\"Verification PIN\"/><br/>\n                    <button id=\"submitLogin\" style={{marginLeft: 20}} onClick={()=>{this.verifyPIN()}}>Finish</button>\n                    <br/><br/>\n                    <button id=\"negative\" style={{marginLeft: 20}} onClick={()=>{this.verifyCellNo()}}>Re-enter Phone Number</button>\n                </div>\n\n\n            <br/>\n            <h2 id=\"welcome-text\">Welcome.</h2><br/>\n            <p id=\"welcome-small-text\">Onecab is the fresh, new and affordable.\n            By keeping our operations lean, small and agile we save you money on every journey that you take with us.</p><br/>\n\n            <fieldset className=\"registrationPanel\">\n            <center>\n            <p id=\"smallTitle\">\n            Create your account\n            </p><br/>\n            <input type=\"number\" onChange={(text)=>{this.setState({cellNo: text.target.value})}} id=\"cellphone\" max-length=\"10\" placeholder=\"Cellphone Number\"/><br/>\n            <button id=\"submitLogin\" onClick={()=>{this.verifyCellNo()}}>Continue</button>\n            </center>\n            </fieldset>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { useTransition, useTransitionHistory } from 'react-route-transition';\nimport Home from './Components/Home';\nimport Login from './Components/Login';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport default class App extends React.Component {\n\n\n  render(){\n  return (\n    <Router>\n      <Switch>\n    <Route exact path=\"/\">\n    <Login/>\n  </Route>\n\n  <Route exact path=\"/home\">\n    <Home/>\n  </Route>\n</Switch>\n</Router>\n\n  );\n}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}